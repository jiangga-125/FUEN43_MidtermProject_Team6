@model ReportMail.Data.Entities.ReportDefinition
@using System.Text.Json
@{
    ViewData["Title"] = "新增報表";

    // 讀取預設類型：querystring > Model.Category > 預設 line
    var q = (Context.Request?.Query["category"].ToString() ?? "").ToLowerInvariant();
    var baseCategory = string.IsNullOrWhiteSpace(q) ? (Model?.Category ?? "line") : q;
    var lc = baseCategory.ToLowerInvariant();
    var currentCategory = (lc == "line" || lc == "bar" || lc == "pie") ? lc : "line";

    Func<string, string> Btn = key => currentCategory == key ? "btn btn-sm btn-primary" : "btn btn-sm btn-outline-secondary";

    // 預覽 action
    var previewUrl = Url.Action("PreviewDraft", "ReportPreview", new { area = "ReportMail" }) ?? "#"; 
}

<h1 class="mb-3">新增報表</h1>

<!-- 類型切換（Create 頁：導頁帶 category） -->
<div class="btn-group mb-3" role="group">
    <a class="@Btn("line")" href="@Url.Action("Create", "ReportDefinitions", new { area = "ReportMail", category = "line" })">折線圖</a>
    <a class="@Btn("bar")" href="@Url.Action("Create", "ReportDefinitions", new { area = "ReportMail", category = "bar" })">長條圖</a>
    <a class="@Btn("pie")" href="@Url.Action("Create", "ReportDefinitions", new { area = "ReportMail", category = "pie" })">圓餅圖</a>
</div>

<hr />

<div class="row">
    <div class="col-lg-5">
        <!-- ReportDefinition 表單 -->
        <form id="frmCreate" asp-area="ReportMail" asp-controller="ReportDefinitions" asp-action="Create" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="Category" value="@currentCategory" />
            <input type="hidden" name="FiltersJson" id="FiltersJson" />

            <div class="mb-3">
                <label asp-for="ReportName" class="form-label">名稱</label>
                <input asp-for="ReportName" class="form-control" />
                <span asp-validation-for="ReportName" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Description" class="form-label">說明</label>
                <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-check mb-3">
                <input class="form-check-input" asp-for="IsActive" checked />
                <label class="form-check-label" asp-for="IsActive">啟用</label>
            </div>

            <div class="d-flex gap-2">
                <button id="btnSubmit" type="submit" class="btn btn-primary">建立</button>
                <a asp-area="ReportMail" asp-controller="ReportDefinitions" asp-action="Index" class="btn btn-secondary">返回列表</a>
            </div>
        </form>

        <hr />

        <!-- 篩選器：新增/編輯 表單（簡化版） -->
        <h5 class="mt-3">新增 / 編輯 篩選器</h5>
        <form id="filterForm" onsubmit="return false;">
            <input type="hidden" id="editIndex" value="-1" />
            <div class="row g-2">
                <div class="col-6">
                    <label class="form-label">欄位代號(FieldName)</label>
                    <select id="fldFieldName" class="form-select">
                        <!-- 依類型提供常用欄位 -->
                        @if (currentCategory == "line")
                        {
                            <option>OrderDate</option>
                            <option>BorrowDate</option>
                            <option>CategoryID</option>
                            <option>SalePrice</option>
                            <option>PublishYear</option>
                        }
                        else
                        {
                            <option>DateRange</option>
                            <option>Rank</option>
                            <option>CategoryID</option>
                            <option>SalePrice</option>
                            <option>PublishYear</option>
                        }
                    </select>
                </div>
                <div class="col-6">
                    <label class="form-label">顯示名稱(DisplayName)</label>
                    <input id="fldDisplayName" class="form-control" />
                </div>
                <div class="col-4">
                    <label class="form-label">資料型別(DataType)</label>
                    <select id="fldDataType" class="form-select">
                        <option value="date">date</option>
                        <option value="select">select</option>
                        <option value="number">number</option>
                        <option value="text">text</option>
                    </select>
                </div>
                <div class="col-4">
                    <label class="form-label">運算子(Operator)</label>
                    <select id="fldOperator" class="form-select">
                        <option value="between">between</option>
                        <option value="in">in</option>
                        <option value="=">=</option>
                    </select>
                </div>
                <div class="col-4">
                    <label class="form-label">排序(OrderIndex)</label>
                    <input id="fldOrderIndex" class="form-control" type="number" value="1" />
                </div>
                <div class="col-12">
                    <label class="form-label">選項(Options, JSON)</label>
                    <textarea id="fldOptions" class="form-control" rows="2" placeholder='例如：{"granularity":["day","month","year"]}'></textarea>
                </div>
                <div class="col-6 d-flex align-items-center">
                    <div class="form-check">
                        <input id="fldRequired" class="form-check-input" type="checkbox" />
                        <label class="form-check-label">必填</label>
                    </div>
                    <div class="form-check ms-3">
                        <input id="fldActive" class="form-check-input" type="checkbox" checked />
                        <label class="form-check-label">啟用</label>
                    </div>
                </div>
                <div class="col-6 text-end">
                    <button id="btnSaveFilter" class="btn btn-sm btn-primary">儲存欄位</button>
                    <button id="btnResetFilter" class="btn btn-sm btn-outline-secondary" type="button">清空</button>
                </div>
            </div>
        </form>

        <!-- 快速模板 -->
        <div class="mt-3">
            <div class="fw-bold mb-2">快速模板</div>
            <div class="d-grid gap-2">
                @if (currentCategory == "line")
                {
                    <button class="btn btn-outline-primary" type="button" onclick="applyPreset('line.sales')">書籍銷售量（本）：日期顆粒度＋種類＋價位</button>
                    <button class="btn btn-outline-primary" type="button" onclick="applyPreset('line.borrow')">書籍借閱量（本）：日期顆粒度＋種類＋出版年份(10年)</button>
                }
                else if (currentCategory == "bar")
                {
                    <button class="btn btn-outline-success" type="button" onclick="applyPreset('bar.sales')">銷售量排行：日期範圍＋名次區間＋種類＋價位</button>
                    <button class="btn btn-outline-success" type="button" onclick="applyPreset('bar.borrow')">借閱量排行：日期範圍＋名次區間＋種類＋出版年份(10年)</button>
                }
                else
                {
                    <button class="btn btn-outline-warning" type="button" onclick="applyPreset('pie.sales')">銷售量組成：日期範圍＋名次區間＋種類＋價位</button>
                    <button class="btn btn-outline-warning" type="button" onclick="applyPreset('pie.borrow')">借閱量組成：日期範圍＋名次區間＋種類＋出版年份(10年)</button>
                }
            </div>
        </div>
    </div>

    <!-- 右側：篩選器清單 + 預覽圖表 -->
    <div class="col-lg-7">
        <h5>已設定的篩選器</h5>
        <div class="table-responsive">
            <table class="table table-sm align-middle" id="tblFilters">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Field</th>
                        <th>Display</th>
                        <th>Type</th>
                        <th>Op</th>
                        <th>Order</th>
                        <th>啟用</th>
                        <th>必填</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <div class="d-flex justify-content-between mt-3">
            <div class="small text-muted">送出時會一併建立上述欄位</div>
            <button class="btn btn-outline-primary" type="button" onclick="preview()">預覽圖表</button>
        </div>

        <hr />
        <canvas id="previewChart" style="width:100%; height:360px;"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        //  前端暫存 
        let currentCategory = "@currentCategory";
        let filters = []; // {FieldName, DisplayName, DataType, Operator, Options, OrderIndex, IsRequired, IsActive}

        function renderTable(){
          const tb = document.querySelector('#tblFilters tbody');
          tb.innerHTML = "";
          filters.sort((a,b)=> (a.OrderIndex||0)-(b.OrderIndex||0));
          filters.forEach((f, i) => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
              <td>${i+1}</td>
              <td>${f.FieldName}</td>
              <td>${f.DisplayName||''}</td>
              <td>${f.DataType}</td>
              <td>${f.Operator}</td>
              <td>${f.OrderIndex||''}</td>
              <td>${f.IsActive? '✔': ''}</td>
              <td>${f.IsRequired? '✔': ''}</td>
              <td>
                <button class="btn btn-sm btn-outline-secondary" onclick="editRow(${i})">編輯</button>
                <button class="btn btn-sm btn-outline-danger" onclick="delRow(${i})">刪除</button>
              </td>`;
            tb.appendChild(tr);
          });
          document.getElementById('FiltersJson').value = JSON.stringify(filters);
        }

        function resetForm(){
          document.getElementById('editIndex').value = -1;
          document.getElementById('fldFieldName').value = (currentCategory==='line'?'OrderDate':'DateRange');
          document.getElementById('fldDisplayName').value = '';
          document.getElementById('fldDataType').value = (currentCategory==='line'?'date':'date');
          document.getElementById('fldOperator').value = 'between';
          document.getElementById('fldOrderIndex').value = (filters.length+1);
          document.getElementById('fldOptions').value = '';
          document.getElementById('fldRequired').checked = false;
          document.getElementById('fldActive').checked = true;
        }
        resetForm();

        document.getElementById('btnSaveFilter').addEventListener('click', () => {
          const obj = {
            FieldName:   document.getElementById('fldFieldName').value.trim(),
            DisplayName: document.getElementById('fldDisplayName').value.trim(),
            DataType:    document.getElementById('fldDataType').value,
            Operator:    document.getElementById('fldOperator').value,
            Options:     document.getElementById('fldOptions').value.trim() || null,
            OrderIndex:  parseInt(document.getElementById('fldOrderIndex').value || "0"),
            IsRequired:  document.getElementById('fldRequired').checked,
            IsActive:    document.getElementById('fldActive').checked
          };
          const idx = parseInt(document.getElementById('editIndex').value);
          if(idx >= 0){ filters[idx] = obj; } else { filters.push(obj); }
          renderTable(); resetForm();
        });

        document.getElementById('btnResetFilter').addEventListener('click', resetForm);

        function editRow(i){
          const f = filters[i];
          document.getElementById('editIndex').value = i;
          document.getElementById('fldFieldName').value   = f.FieldName;
          document.getElementById('fldDisplayName').value = f.DisplayName||'';
          document.getElementById('fldDataType').value    = f.DataType;
          document.getElementById('fldOperator').value    = f.Operator;
          document.getElementById('fldOrderIndex').value  = f.OrderIndex||1;
          document.getElementById('fldOptions').value     = f.Options||'';
          document.getElementById('fldRequired').checked  = !!f.IsRequired;
          document.getElementById('fldActive').checked    = !!f.IsActive;
        }
        function delRow(i){ filters.splice(i,1); renderTable(); }

        //  快速模板 
        function applyPreset(code){
          const add = (o)=>filters.push(o);
          const gran = JSON.stringify({ granularity:["day","month","year"] });
          const price = JSON.stringify({ ranges: Array.from({length:10},(_,i)=>`${i*100+1}-${(i+1)*100}`) });
          const decades = (()=>{ const y=new Date().getFullYear(); const arr=[]; for(let s=1901;s<=y;s+=10){ const e=Math.min(s+9,y); arr.push(`${s}-${e}`);} return JSON.stringify({ranges:arr}); })();

          if(code==='line.sales'){
            add({FieldName:'OrderDate', DisplayName:'日期區間', DataType:'date', Operator:'between', Options:gran, OrderIndex:1, IsRequired:true, IsActive:true});
            add({FieldName:'CategoryID',DisplayName:'書籍種類', DataType:'select', Operator:'in',     Options:JSON.stringify({source:'Categories'}), OrderIndex:2, IsRequired:false, IsActive:true});
            add({FieldName:'SalePrice', DisplayName:'單本價位', DataType:'select', Operator:'between', Options:price, OrderIndex:3, IsRequired:false, IsActive:true});
          }
          else if(code==='line.borrow'){
            add({FieldName:'BorrowDate',DisplayName:'日期區間', DataType:'date', Operator:'between', Options:gran, OrderIndex:1, IsRequired:true, IsActive:true});
            add({FieldName:'CategoryID',DisplayName:'書籍種類', DataType:'select', Operator:'in', Options:JSON.stringify({source:'Categories'}), OrderIndex:2, IsRequired:false, IsActive:true});
            add({FieldName:'PublishYear',DisplayName:'出版年份(每10年)', DataType:'select', Operator:'between', Options:decades, OrderIndex:3, IsRequired:false, IsActive:true});
          }
          else if(code==='bar.sales' || code==='pie.sales'){
            add({FieldName:'DateRange', DisplayName:'日期範圍', DataType:'date', Operator:'between', Options:null, OrderIndex:1, IsRequired:true, IsActive:true});
            add({FieldName:'Rank',      DisplayName:'排行名次區間', DataType:'number', Operator:'between', Options:null, OrderIndex:2, IsRequired:false, IsActive:true});
            add({FieldName:'CategoryID',DisplayName:'書籍種類', DataType:'select', Operator:'in', Options:JSON.stringify({source:'Categories'}), OrderIndex:3, IsRequired:false, IsActive:true});
            add({FieldName:'SalePrice', DisplayName:'單本價位', DataType:'select', Operator:'between', Options:price, OrderIndex:4, IsRequired:false, IsActive:true});
          }
          else if(code==='bar.borrow' || code==='pie.borrow'){
            add({FieldName:'DateRange', DisplayName:'日期範圍', DataType:'date', Operator:'between', Options:null, OrderIndex:1, IsRequired:true, IsActive:true});
            add({FieldName:'Rank',      DisplayName:'排行名次區間', DataType:'number', Operator:'between', Options:null, OrderIndex:2, IsRequired:false, IsActive:true});
            add({FieldName:'CategoryID',DisplayName:'書籍種類', DataType:'select', Operator:'in', Options:JSON.stringify({source:'Categories'}), OrderIndex:3, IsRequired:false, IsActive:true});
            add({FieldName:'PublishYear',DisplayName:'出版年份(每10年)', DataType:'select', Operator:'between', Options:decades, OrderIndex:4, IsRequired:false, IsActive:true});
          }
          renderTable();
        }

        //  送出前序列化 
        document.getElementById('btnSubmit').addEventListener('click', ()=>{
          document.getElementById('FiltersJson').value = JSON.stringify(filters);
        });

        //  預覽 
        let chart;
        async function preview(){
          const body = {
            category: currentCategory,
            filters: filters
          };
          const res = await fetch("@previewUrl", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(body)
          });
          const js = await res.json();
          const ctx = document.getElementById('previewChart');
          if(chart) chart.destroy();
          chart = new Chart(ctx, {
            type: (currentCategory==='pie' ? 'pie' : currentCategory==='bar' ? 'bar':'line'),
            data: { labels: js.labels, datasets: [{ label: js.title || '預覽', data: js.data }] },
            options: { responsive: true }
          });
        }

        // 初始：給個最小模板，避免空白
        if(filters.length===0){
          applyPreset(currentCategory + (currentCategory==='line'?'.sales':'.sales'));
        }
        renderTable();
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
